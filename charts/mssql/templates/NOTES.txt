Execute the following to get the administrator credentials:

  echo Username: sa
  SA_PASSWORD=$(kubectl -n {{ include "common.names.namespace" . }} get secret {{ template "mssql.secretName" . }} -o jsonpath="{.data.mssql-root-password}" | base64 -d)


To connect to your database:

  1. Run a pod that you can use as a client:

      kubectl -n {{ include "common.names.namespace" . }} run {{ include "common.names.fullname" . }}-client --rm --tty -i --restart='Never' --image  {{ template "mssql.client.image" . }} --env SA_PASSWORD=$SA_PASSWORD --command -- bash

  2. To connect to primary service (read/write):

      sqlcmd -S {{ include "mssql.primary.fullname" . }}.{{ include "common.names.namespace" . }}.svc.{{ .Values.clusterDomain }} -U sa -P "$SA_PASSWORD"

{{- if eq .Values.architecture "replication" }}

  3. To connect to secondary service (read-only):

      sqlcmd -S {{ include "mssql.secondary.fullname" . }}.{{ include "common.names.namespace" . }}.svc.{{ .Values.clusterDomain }} -U sa -P "$SA_PASSWORD"


{{- end }}
{{- if .Values.backup.enabled }}

   4. To take a backup (.i.e. boostrapped DB {{ .Values.auth.database }} initiated by the helm release):

        sqlcmd \
          -S {{ include "mssql.primary.fullname" . }}.{{ include "common.names.namespace" . }}.svc.{{ .Values.clusterDomain }} \
          -U sa \
          -P "$SA_PASSWORD" \
          -e -Q "BACKUP DATABASE [{{ .Values.auth.database }}] TO DISK = N'{{ .Values.backup.persistence.mount }}/{{ .Values.auth.database }}-$(date +%Y-%m-%d_%Hh%Mm%Ssec).bak' WITH NOFORMAT, NOINIT, NAME = '{{ .Values.auth.database }}backup', SKIP, NOREWIND, NOUNLOAD, STATS = 10"

    ref: https://docs.microsoft.com/en-us/sql/linux/tutorial-restore-backup-in-sql-server-container?view=sql-server-ver16
{{- end }}


To execute SQL from file, use command above & append [ -e -i path/to/file.sql ] at the end of the command.
To execute SQL from string, use command above & append [ -e -Q "select name from sys.databases" ] at the end of the command.


To Run your queries after connecting to your database:


  0. Check version

   ```sql
   select @@version
   go
   ```

   1. List databases
   ```sql
    select name from sys.databases
    go
   ```

   2. Check collation
   ```sql
   SELECT SERVERPROPERTY('COLLATION')
   ```

   3. List tables of a database

   ```sql
   select table_name from YOUR_DATBASE_NAME.information_schema.tables
   go
   ```

   4. List data of table

   ```sql
   USE YOUR_DATABASE_NAME
   GO
   select * from YOUR_TABLE_NAME
   GO

   ```

#### INGRESS #################################################################
{{- if and .Values.ingress.enabled (eq .Values.ingress.className "traefik") }}
Apply a similar patch as above, if {{ .Values.primary.service.ports.mssql }} port is still not exposed with Traefik
```
cat > /tmp/patch-traefik.yaml <<EOF
spec:
  valuesContent: |-
    rbac:
      enabled: true
    ports:
      web:
        redirectTo: websecure
      websecure:
        tls:
          enabled: true
      {{ .Values.ingress.traefikEntrypoint }}:
        port: {{ .Values.primary.service.ports.mssql }}
        protocol: TCP
        expose: true
    podAnnotations:
      prometheus.io/port: "8082"
      prometheus.io/scrape: "true"
    providers:
      kubernetesIngress:
        publishedService:
          enabled: true
    priorityClassName: "system-cluster-critical"
    image:
      name: "rancher/mirrored-library-traefik"
      tag: "2.6.2"
    tolerations:
    - key: "CriticalAddonsOnly"
      operator: "Exists"
    - key: "node-role.kubernetes.io/control-plane"
      operator: "Exists"
      effect: "NoSchedule"
    - key: "node-role.kubernetes.io/master"
      operator: "Exists"
      effect: "NoSchedule"
    service:
      ipFamilyPolicy: "PreferDualStack"
EOF

kubectl -n kube-system patch helmchart traefik --type merge --patch-file /tmp/patch-traefik.yaml
```
{{- end }}

{{- if not .Values.backup.persistence.enabled }}
#################################################################################
######   WARNING: Persistence is disabled for BACKUPs !!!                    #####
######  !!! You will lose your  backups when                                #####
######            the primary pod is terminated.                            #####
########   Check @param backup.persistence.enabled to metigate this      ########
#################################################################################
{{- end }}


#################################################################################
#######################        DISCLAIMER        ################################
#################################################################################
BY DEPLOYING THIS HELM CHART, YOU ARE ACCEPTING THE END-USER Licensing Agreement
  of Microsoft SQL Server:
     https://go.microsoft.com/fwlink/?LinkId=746388
IF YOU ARE NOT ACCEPTING THAT LICENSE, YOU MUST DELETE THIS RELEASE IMMEDIATELY:
    # helm -n {{ .Release.Namespace }} delete {{ .Release.Name }}
#################################################################################