apiVersion: apps.openshift.io/v1
kind: DeploymentConfig
metadata:
  name: {{ include "generic-app.fullname" . }}
  labels:
    {{- include "generic-app.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  triggers:
  - type: ConfigChange
  - imageChangeParams:
      automatic: {{ .Values.deployTriggers.imageStreamChange }}
      containerNames:
      - {{ include "generic-app.fullname" . }}
      from:
        kind: ImageStreamTag
        name: {{ printf "%s:%s" (include "generic-app.image-stream-name" .) (include "generic-app.image-stream-tag" .) }}
      {{- if .Values.existingImageStream.namespace }}
        namespace: {{ .Values.existingImageStream.namespace }}
      {{- end }}
    type: ImageChange
  selector:
    {{- include "generic-app.labels" . | nindent 4 }}
    deploymentconfig: {{ include "generic-app.fullname" . }}
  revisionHistoryLimit: 10
  strategy:
    activeDeadlineSeconds: 21600
    resources:
      {{- toYaml .Values.rollout.resources | nindent 6 }}
    rollingParams:
      intervalSeconds: 1
      maxSurge: 25%
      maxUnavailable: 25%
      timeoutSeconds: 600
      updatePeriodSeconds: 1
    type: Rolling
  template:
    metadata:  
      labels:
        {{- include "generic-app.labels" . | nindent 8 }}
        deploymentconfig: {{ include "generic-app.fullname" . }}
    spec:
      containers:
      - name: {{ include "generic-app.fullname" . }}
        imagePullPolicy: Always
        ports:
        - name: http
          containerPort: {{ .Values.port }}
          protocol: TCP
        resources:
          {{- toYaml .Values.resources | nindent 10 }}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        {{- with .Values.envVars }}
        envFrom:
          - secretRef:
              name: {{ include "generic-app.fullname" $ }}-env-vars
        {{- end }}

        {{- if .Values.configFile.mount }}
        volumeMounts:
          - mountPath: {{ .Values.configFile.mount }}
            name: config-file
            readOnly: true
        {{- end }}
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      {{- if .Values.configFile.mount }}
      volumes:
        - name: config-file
          configMap:
            defaultMode: 420
            name: {{ include "generic-app.fullname" . }}-file
            # items:
            #   - key: {{ .Values.configFile.name }}
            #     path: {{ .Values.configFile.name }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.securityContext | nindent 8 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
  test: false
